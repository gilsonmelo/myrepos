{"name":"sysctl","description":"Configure/Set sysctl paramaters","long_description":"DESCRIPTION\n===========\nManage sysctl via a sysctl LWRP.\n\n\nAttributes\n----------\n\n| Name | Value | Description\n|:---|:---|:--------\n|`default[:sysctl][:values]` | {}  | Hash Of Key Value pairs the attribute_driver recipe uses.\n|`default[:sysctl][:config_file]` | rhel: `\"/etc/sysctl.conf\"` debian: `\"/etc/sysctl.d/99-chef.conf\"` | The file to write values to.\n\nRecipes\n---------\n\n| Name | Description |\n|:-----|:------------|\n|attribute_driver.rb| Reads attributes set in `node[:sysctl][:values]`, and sets sysctl resources with  the values\n|default.rb| Simply sets up the resources needed to use the lwrp\n|library.rb| Empty recipe if you want to avoid default, but still want to explicitly include (for whatever reason)\n\nSysctl LWRP\n===========\n\n\nAttributes\n----------\n| Name | Type | Default | Description   |\n|:-----|:-----|:--------|:--------------|\n| `name` | `String` | `:name_attribute` |The key name. Defaults to the resource name i.e. sysctl \"some.key\"\n| `value`| `String`, `Fixnum`, `Integer` | The Value for this key\n| `save` | boolean | `true` | save the setting back to the node data (default: false)\n\nActions\n-------\n| action | default | Description|\n|:-------|:--------|:-----------|\n| `:set` |  yes | Make sure the running state is set  (default)\n| `:write`| yes |  Write the config file  (default)\n\n\n Known Bugs\n ----------\n * RHEL/CentOS 6 now have sysctl.d Directory, we should generate a config in this dir instead\n * only intended to be used on Linux\n\n\nExample Usage\n=============\nLWRP\n----\nEnsure running state, and write this key to sysctl.conf\n\n    sysctl \"kernel.sysrq\" do\n       value 1\n    end\n\n__Check out__ [example/recipes/example.rb] [2] For more recipe examples.\n\nChefSpec Matchers\n=================\nThere are chefspec matchers in this cookbook to test your usage of the lwrp\n\nset_sysctl\n----------\nmatcher for the set action\n\nwrite_sysctl\n------------\nmatcher for the write action\n\n\n\nAttributes\n----------\nIn a role attribute or override:\n\n    {\n      \"sysctl\": {\n        \"net.ipv4.tcp_window_scaling\": 0\n      }\n    }\n\n\n__Check out__ [example/attributes/example.rb] [1] For more attribute examples.\n\n\nAuthor and License\n===================\n\n__Author__ Jesse Nelson <spheromak@gmail.com>\n\nCopyright 2011-2013, Jesse Nelson\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n[1]: https://github.com/spheromak/cookbooks/blob/master/sysctl/example/attributes/example.rb\n[2]: https://github.com/spheromak/cookbooks/blob/master/sysctl/example/recipes/example.rb\n","maintainer":"Jesse Nelson","maintainer_email":"spheromak@gmail.com","license":"Apache 2.0","platforms":{},"dependencies":{"accumulator":">= 0.0.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"version":"2.0.1"}